openapi: 3.0.3
info:
  title: Yoshi T-Queria 
  description: |-
    Somos una empresa que nacio en el a√±o 2023 en la Universidad, Nuesta empresa se encarga de ofrecer alimentos de calidad, a un precio muy accesible, nuestra experiencia nos respalda. 
  

    En este momento, nuestra pagina se encuentra en fase Beta, pero ya puedes ir revisando un poco de nosotros y nuestros productos
  
  termsOfService: http://swagger.io/terms/
  contact:
    email: YoshiTQueria@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://YoshiTQueria.Restaurant.io/api/v3
tags:
  - name: Yoshi TQueria
    description: Tacos and More
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Taqueria
    description: Access to inventory orders
    externalDocs:
      description: Find out more about our Taqueria
      url: http://swagger.io
paths:
  /Dish:
    put:
      tags:
        - Dish
      summary: Update an existing Dish in the inventory
      description: Update an existing Dish by Id
      operationId: updateDish
      requestBody:
        description: Update an existent Dish in the inventory
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dish'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dish'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dish'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dish'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Dish'
        '400':
          description: Invalid ID supplied
        '404':
          description: Dish not found
        '405':
          description: Validation exception
      security:
        - dishmenu_auth:
            - write:dish
            - read:dish
    post:
      tags:
        - Dish
      summary: Create a New Dish
      description: ''
      operationId: updateDishWithForm
      parameters:
        
        - name: name
          in: query
          description: Name of dish that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of pet that needs to be updated
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      security:
        - dishmenu_auth:
            - write:dish
            - read:dish
  /Dish/{DishId}:
    get:
      tags:
        - Dish
      summary: Find Dish by ID
      description: Returns a single Dish from the Menu
      operationId: getDishById
      parameters:
        - name: DishId
          in: path
          description: ID of Dish to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dish'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Dish'
        '400':
          description: Invalid ID supplied
        '404':
          description: Dish not found
      security:
        - api_key: []
        - dishmenu_auth:
            - write:dish
            - read:dish
    delete:
      tags:
        - Dish
      summary: Deletes a Dish
      description: delete a Dish
      operationId: deleteDish
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: DishId
          in: path
          description: Dish id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dish'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Dish'
        '400':
          description: Invalid Dish value
      security:
        - dishmenu_auth:
            - write:dish
            - read:dish
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Tacos de Pastor
      xml:
        name: category
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Dish:
      required:
        - name of the dish
        - photo Of the Menu
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 98
        name:
          type: string
          example: Tacos al pastor
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: Inventory
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: dish status in the Taqueria
          enum:
            - available
            - pending
            - sold
      xml:
        name: dish
  requestBodies:
    Dish:
      description: Dish object that needs to be added to the Inventory
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Dish'
        application/xml:
          schema:
            $ref: '#/components/schemas/Dish'
  securitySchemes:
    dishmenu_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://MagerCe.Restaurant.io/oauth/authorize
          scopes:
            write:pets: modify dishes in your account
            read:pets: read your disehes in the Inventory
    api_key:
      type: apiKey
      name: api_key
      in: header